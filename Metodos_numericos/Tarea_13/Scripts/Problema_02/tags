!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CC	Makefile	/^CC=gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS= -Wall -Wextra -Werror -pedantic -ansi -std=c11$/;"	m
EXEC	Makefile	/^EXEC= main.out$/;"	m
FOBJS	Makefile	/^FOBJS=$(FUNC:.c=.o)$/;"	m
FUNC	Makefile	/^FUNC=$(patsubst %,$(IDIR)%,$(_FUNC))$/;"	m
IDIR	Makefile	/^IDIR=Modules\/$/;"	m
LDFLAGS	Makefile	/^LDFLAGS=-std=c11 -lm$/;"	m
OBJS	Makefile	/^OBJS=$(SOURCES:.c=.o)$/;"	m
SOURCES	Makefile	/^SOURCES=main.c$/;"	m
_FUNC	Makefile	/^_FUNC=	legendre_polynome.c\\$/;"	m
color	graphic.py	/^         color="#000000",$/;"	v
colors	graphic.py	/^colors = ["#7400b8",$/;"	v
convergence	Modules/newton.c	/^int convergence(double x, int i)$/;"	f
dpi	graphic.py	/^            dpi=400)$/;"	v
legende_polynome	Modules/legendre_polynome.c	/^double legende_polynome(double x, int n)$/;"	f
legendre_H	Modules/legendre_polynome.h	2;"	d
ls	graphic.py	/^         ls="--")$/;"	v
main	main.c	/^int main(int argv, char *argc[])$/;"	f
ncol	graphic.py	/^           ncol=3)$/;"	v
newton_H	Modules/newton.h	2;"	d
newton_method	Modules/newton.c	/^double newton_method(double x, int n)$/;"	f
obtain_ai	Modules/legendre_polynome.c	/^double obtain_ai(int i, int n)$/;"	f
obtain_derivate	Modules/newton.c	/^double obtain_derivate(double x, int i)$/;"	f
open_file	Modules/tools.c	/^FILE *open_file(char *filename, char *mode)$/;"	f
pi	Modules/legendre_polynome.h	4;"	d
pn	graphic.py	/^def pn(x, n):$/;"	f
tools_H	Modules/tools.h	2;"	d
write_results	Modules/tools.c	/^void write_results(FILE *output, int n, double x_i, double result)$/;"	f
x	graphic.py	/^x = np.linspace(-1, 1, 1000)$/;"	v
