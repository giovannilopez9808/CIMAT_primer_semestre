!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CC	Makefile	/^CC=gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS= -Wall -Wextra -Werror -pedantic -ansi -std=c11$/;"	m
EXEC	Makefile	/^EXEC= main.out$/;"	m
FOBJS	Makefile	/^FOBJS=$(FUNC:.c=.o)$/;"	m
FUNC	Makefile	/^FUNC=$(patsubst %,$(IDIR)%,$(_FUNC))$/;"	m
IDIR	Makefile	/^IDIR=Modules\/$/;"	m
LDFLAGS	Makefile	/^LDFLAGS=-std=c11 -lm$/;"	m
OBJS	Makefile	/^OBJS=$(SOURCES:.c=.o)$/;"	m
Parameters	Modules/heat_equation.h	/^} Parameters;$/;"	t	typeref:struct:Parameters_t
Parameters_t	Modules/heat_equation.h	/^typedef struct Parameters_t$/;"	s
SOURCES	Makefile	/^SOURCES=main.c$/;"	m
_FUNC	Makefile	/^_FUNC=	tools.c\\$/;"	m
aspect	graphics.py	/^           aspect="auto",$/;"	v
cmap	graphics.py	/^           cmap="inferno")$/;"	v
create_vector	Modules/heat_equation.c	/^void create_vector(double value, double *vector, int n)$/;"	f
data	graphics.py	/^data = np.loadtxt("u.txt")$/;"	v
data	graphics.py	/^data = np.transpose(data)$/;"	v
define_A_matrix	Modules/heat_equation.c	/^double *define_A_matrix(double k, double t_delta, double x_delta, int x_num)$/;"	f
heat_equation_H	Modules/heat_equation.h	2;"	d
k	Modules/heat_equation.h	/^    double k, u0, ua, ub;$/;"	m	struct:Parameters_t
linspace	Modules/tools.c	/^double *linspace(double a, double b, int n)$/;"	f
main	main.c	/^int main()$/;"	f
obtain_factorization	Modules/heat_equation.c	/^void obtain_factorization(int dimension, double *matrix)$/;"	f
set_initial_state	Modules/heat_equation.c	/^void set_initial_state(Parameters parameters, double *vector, int n)$/;"	f
solve_matrix	Modules/heat_equation.c	/^double *solve_matrix(int n, double *matrix, double *vector)$/;"	f
solve_system	Modules/heat_equation.c	/^void solve_system(Parameters Parametros)$/;"	f
t_max	Modules/heat_equation.h	/^    double t_min, t_max, t_num;$/;"	m	struct:Parameters_t
t_min	Modules/heat_equation.h	/^    double t_min, t_max, t_num;$/;"	m	struct:Parameters_t
t_num	Modules/heat_equation.h	/^    double t_min, t_max, t_num;$/;"	m	struct:Parameters_t
time	graphics.py	/^time = np.linspace(0, 1, 101)$/;"	v
tools_H	Modules/tools.h	2;"	d
u0	Modules/heat_equation.h	/^    double k, u0, ua, ub;$/;"	m	struct:Parameters_t
ua	Modules/heat_equation.h	/^    double k, u0, ua, ub;$/;"	m	struct:Parameters_t
ub	Modules/heat_equation.h	/^    double k, u0, ua, ub;$/;"	m	struct:Parameters_t
valid_obtain_factorization	Modules/heat_equation.c	/^void valid_obtain_factorization(double *matrix, int i)$/;"	f
write_results	Modules/tools.c	/^void write_results(char *output_filename, int m, int n, double table[])$/;"	f
x_max	Modules/heat_equation.h	/^    double x_min, x_max, x_num;$/;"	m	struct:Parameters_t
x_min	Modules/heat_equation.h	/^    double x_min, x_max, x_num;$/;"	m	struct:Parameters_t
x_num	Modules/heat_equation.h	/^    double x_min, x_max, x_num;$/;"	m	struct:Parameters_t
